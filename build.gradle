import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id 'java-library'
    id("io.papermc.paperweight.userdev") version "1.7.7"
    id("xyz.jpenilla.run-paper") version "2.3.0"
    id "com.modrinth.minotaur" version "2.+"
    id 'maven-publish'
}

group = 'me.quickscythe'
version = "${plugin_version}-${minecraft_version}-${build_status}-B${build_number}"


repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "quipt"
        url = "https://repo.vanillaflux.com/repository/quipt/"
    }
}

dependencies {
    paperweight.paperDevBundle("${minecraft_version}-${paper_version}")

    implementation "me.quickscythe:quipt-core:${quipt_core_version}"
    implementation "me.quickscythe:quipt-bot:${quipt_bot_version}"
    implementation "org.json:json:$json_version"
    implementation "org.eclipse.jgit:org.eclipse.jgit:$jgit_version"
}

def targetJavaVersion = 21
java {
    withSourcesJar()
    withJavadocJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = 'localRepo'
            url = layout.buildDirectory.dir("repo")
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    def log = System.getenv("CHANGELOG")
    if (log != null) changelog = log else changelog = file("changelog.md").text
    projectId = "${modrinth_id}"
    versionNumber = "${plugin_version}"
    versionType = "${build_status}"
    uploadFile = jar
    loaders = ["paper"]
    syncBodyFrom = file("readme.md").text
//    changelog = file("changelog.md").text
    dependencies {}
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)

paperweight.reobfArtifactConfiguration = ReobfArtifactConfiguration.getMOJANG_PRODUCTION()

